from math import factorial

def combinations (n, k): 
    """
    Функция выполняет подсчет сочетаний
    :param n: n различных элементов множества
    :param k: набор состоящий из k элементов
    :return : количество сочетаний
    """
    return factorial(n) / (factorial(k)*factorial(n-k))



ROUNDING_SIZE = 5

# Задание 1
# Из колоды в 52 карты извлекаются случайным образом 4 карты. 
# a) Найти вероятность того, что все карты – крести. 
# б) Найти вероятность, что среди 4-х карт окажется хотя бы один туз.

x = combinations(13,4)
y = combinations(52,4)
print(f'Решение задания 1а -> Р = {x/y*100:.{ROUNDING_SIZE}f} %')

x1 = combinations(4,1)*combinations(48,3)
x2 = combinations(4,2)*combinations(48,2)
x3 = combinations(4,3)*combinations(48,1)
# print(f'x1+x2+x3+1 -> {x1+x2+x3+1:.{ROUNDING_SIZE}f}')
# print(f'y -> {y:.{ROUNDING_SIZE}f}')
print(f'Решение задания 1б -> Р = {(x1+x2+x3+1)/y*100:.{ROUNDING_SIZE}f} %')


# Задание 2
# На входной двери подъезда установлен кодовый замок, содержащий десять кнопок с цифрами от 0 до 9. 
# Код содержит три цифры, которые нужно нажать одновременно. 
# Какова вероятность того, что человек, не знающий код, откроет дверь с первой попытки? 

y = combinations(10,3)
print(f'Решение задания 2 -> Р = {1/y*100:.{ROUNDING_SIZE}f} %')


# Задание 3
# В ящике имеется 15 деталей, из которых 9 окрашены. 
# Рабочий случайным образом извлекает 3 детали. 
# Какова вероятность того, что все извлеченные детали окрашены? 

x = combinations(9,3)
y = combinations(15,3)
print(f'Решение задания 3 -> Р = {x/y*100:.{ROUNDING_SIZE}f} %')



# Задание 4
# В лотерее 100 билетов. Из них 2 выигрышных. 
# Какова вероятность того, что 2 приобретенных билета окажутся выигрышными?

y = combinations(100,2)
print(f'Решение задания 4 -> Р = {1/y*100:.{ROUNDING_SIZE}f} %')